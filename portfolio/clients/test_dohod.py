from portfolio.clients.dohod import DohodClient
from unittest.mock import patch, MagicMock


@patch("portfolio.clients.dohod.requests")
def test_get_last_quote(mock_requests):
    mock_response = MagicMock()
    mock_response.status_code = 200
    mock_response.text = """
            [
          {
            "id": "RU000A103HT3_TQCB",
            "xml_isin": "RU000A103HT3",
            "name": "\u041c\u0412 \u0424\u0418\u041d 1\u04202",
            "emitent": "\u041c\u0412 \u0424\u0438\u043d\u0430\u043d\u0441",
            "borrower": "\u041c.\u0412\u0438\u0434\u0435\u043e",
            "borrower_country": "\u0420\u043e\u0441\u0441\u0438\u044f",
            "issue_date": "2021-08-11",
            "maturity_date": "2024-08-07",
            "effective_date": "2024-08-07",
            "years_to_maturity": "1.1835616438356",
            "nominal": "1000",
            "coupon": "20.1945205479452",
            "coupon_period": "4",
            "price": "94",
            "nkd": "0",
            "tax_free": "0",
            "tax_currency_free": "0",
            "tax_longterm_free": "1",
            "isiis": "1",
            "rutrade": "1",
            "minlot": "1000",
            "minlottype": "1",
            "price_return": "13.76",
            "total_return": "13.701997179749",
            "mod_duration": "0.99329998170464",
            "credit_rating": "5",
            "credit_rating_text": "BB-",
            "description": "\u041a\u043e\u043c\u043f\u0430\u043d\u0438\u044f, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u0444\u0438\u043d\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0413\u0440\u0443\u043f\u043f\u044b \u041c.\u0412\u0438\u0434\u0435\u043e-\u042d\u043b\u044c\u0434\u043e\u0440\u0430\u0434\u043e",
            "comment": null,
            "instrument_type": "1",
            "emitent_type": "3",
            "bond_type": "1",
            "coupon_type": "1",
            "moody": null,
            "sp": null,
            "akra": "A(RU)",
            "fitch": null,
            "expert": "ruA-",
            "down_risk": "-1.9689879634093",
            "quality": "2.4370380099912",
            "is_qualify": "0",
            "size": "7.89",
            "complexity": "0",
            "liquidity_xml": "65",
            "currency": "RUB",
            "sector_text": "\u0420\u0438\u0442\u0435\u0439\u043b",
            "is_show": "1",
            "strategy1": "0",
            "strategy2": "0",
            "strategy3": "0",
            "strategy4": "0",
            "strategy5": "0",
            "strategy6": "0",
            "event": "\u043f\u043e\u0433\u0430\u0448\u0435\u043d\u0438\u0435",
            "category": "0",
            "vol_median": "22.51",
            "bond_link": "0",
            "company_id": null,
            "q_out": "2.9947526236882",
            "q_in": "1.8793233962942",
            "q_dp1": "0",
            "q_ratingroe": "1",
            "q_ratingnetdebt_equity": "0.99",
            "q_col": "6",
            "q_outdp1": "0",
            "q_valueroe": "-0.14229617421767",
            "q_valuenetdebt_equity": "12.861129006281",
            "q_valuecol": "1.1363498835798",
            "q_balance": "1.6256",
            "q_earnings": "2.2857142857143",
            "q_indp1": "0",
            "q_ros": "1",
            "q_operprof": "4",
            "q_inventorturnov": "4",
            "q_turnovofcurasset": "7",
            "q_receivableturnov": "9",
            "q_earningsdp2": "-2.2857142857143",
            "q_balanceliq": "1.6666666666667",
            "q_currentliq": "3",
            "q_quiqliq": "0",
            "q_stability": "1.592",
            "q_shortliabilities": "4",
            "q_balancedp3": "0",
            "q_valueros": "-0.025589993589457",
            "q_valueoperprof": "0.19129010937679",
            "q_valueinventorturnov": "3.5970237962239",
            "q_valueturnovofcurasset": "2.4909451011945",
            "q_valuereceivableturnov": "14.987599150933",
            "q_valuecurrentliq": "0.67031480774656",
            "q_valuequiqliq": "0.11182561940955",
            "q_valueshortliabilities": "0.76306675362007",
            "seniority": "1",
            "is_roe": "1",
            "q_ratingcashratio": "1",
            "q_valuecashratio": "0.00041902454405151",
            "value_of_emission": "9",
            "next_coupon_date": "2022-01-01",
            "simple_yield": "0.13325658012277",
            "eqiv_simple_yield": "0.12567067488503",
            "reinvesting_part": "0.091757489383733",
            "best_score": "1",
            "guarantor_type": "0",
            "q_fear": "4",
            "bond_std": "0",
            "current_coupon_prc": "8.1",
            "last_cup": "2022-01-01",
            "secid": "RU000A103HT3",
            "boardid": "TQCB",
            "boardname": "\u0422+: \u041e\u0431\u043b\u0438\u0433\u0430\u0446\u0438\u0438 - \u0431\u0435\u0437\u0430\u0434\u0440\u0435\u0441.",
            "shortname": "\u041c\u0412 \u0424\u0418\u041d 1\u04202",
            "matdate": "2024-08-07",
            "buybackdate": null,
            "duration": "1.1342465753425",
            "yield": "13.7",
            "yieldtoprevyield": "-0.11",
            "couponperiod": "4",
            "currencyid": "RUB",
            "facevalue": "1000",
            "last": "94.68",
            "change": "0.08",
            "spread": "0",
            "liquidity": "82.2",
            "secname": "\u041c\u0412 \u0424\u0418\u041d\u0410\u041d\u0421 001\u0420-02",
            "instrid": "EICB",
            "isin": "RU000A103HT3",
            "listlevel": "2",
            "couponvalue": "20.19",
            "accruedint": "5.77",
            "commentmd": "",
            "ourselect": "0",
            "hide": "0",
            "update_time": "2023-06-02 23:55:03",
            "isqualinvestors": "0",
            "qualinvestorgroup": "",
            "issuesize": "9000000",
            "coupondate": "2023-08-09",
            "couponpercent": "8.10"
          }
        ]
    """
    mock_requests.post.return_value = mock_response
    client = DohodClient()
    bond = client.get_last_quote('RU000A103HT3')
    assert bond.name == 'МВ ФИН 1Р2'
    assert bond.price == '94.68'
    assert bond.oid == '20.19'
